events {}

stream {
    server {
        listen     5432;
        proxy_pass aurora.vpc:5432;
    }

    server {
    	listen     2049;
    	proxy_pass fs-34ce2754.efs.ap-northeast-2.amazonaws.com:2049;
    }
}


http {
	charset utf-8;
	proxy_intercept_errors on;
	disable_symlinks off;

	autoindex on;
	autoindex_localtime on;

	gzip on;
	gzip_http_version 1.1;
	gzip_vary on;
	gzip_comp_level 6;
	gzip_proxied any;

	brotli_static on;
	brotli on;
	brotli_comp_level 4;

	include mime.types;
	types {
	    application/wasm wasm;
	}
	

	map_hash_bucket_size 128;
	map $http_origin $cors {
		~^https://(.*).hwangsehyun.com$ $http_origin;
		~^https://(.*).kbdlab.xyz$ $http_origin;
		~^https://(.*).yonsei.ac.kr$ $http_origin;
		
		~^http://localhost:(.*) $http_origin;
		~^https://(.*).stackblitz.io $http_origin;
		https://ap-northeast-2.console.aws.amazon.com $http_origin;
		https://hoppscotch.io $http_origin;
		
		http://demo.beyondwork.co.kr $http_origin;
		https://nextlab.s3.ap-northeast-2.amazonaws.com  $http_origin;
		default "";
	}
	
	map $upstream_http_location $redirect_uri {
	    "~^http://[^/]+/(.*)$" $1;
	}
	map $upstream_http_location $redirect_host {
	    "~^http://([^/]+)" $1;
	    default "";
	}


	map $arg_port $port_from_arg {
		~^(\d+) $1;
		default 8080;
	}
	map $arg_EIO $eio {
		4 4;
		default 3;
	}

	server {
		server_name localhost;
		listen 80;
		root /mnt;

		location ~ \.html$ {
			ssi on;
		}
	
		location ~ ^/health/(\d+) {
			proxy_pass http://127.0.0.1:$1;
			access_log off;
			error_log off;
		}
		
		location @volatile {
			root /volatile;
			add_header x-uri $uri;
		}
		location / {
			#try_files $uri $uri/; #/Legacy/$uri /Legacy/$uri/;
		 	index index.html index.js;
		}
	
	}


	server {
		server_name www.hwangsehyun.com;
		root /mnt;
		
		location ~ \.html$ {
			proxy_pass http://localhost;
		}
		
		location @volatile {
			root /volatile;
			add_header x-uri $uri;
		}
		location / {

			#try_files $uri $uri/; # /Legacy/$uri /Legacy/$uri/ =403;
		 	index index.html index.js;
		}
		

		add_header X-Frame-Options SAMEORIGIN;
		add_header Access-Control-Allow-Origin $cors;

		include /etc/nginx/conf/common.conf;
	}


	server {
		server_name *.hwangsehyun.com hwangsehyun.com;
		listen 80;

		location ^~ / {
        	return 301 https://www.hwangsehyun.com$request_uri;
        }

        include /etc/nginx/conf/common.conf;
	}
	

	server {
		listen 80 default_server;
		return 403;

		include /etc/nginx/conf/common.conf;
	}


	server {
		server_name  proxy.hwangsehyun.com;

		location = /_ {
			return 301 /_/;
		}
	    location ~ ^/_(.*)  {
	        proxy_pass http://host.containers.internal:8080;
	        #proxy_redirect / /;
	        proxy_intercept_errors on;

	        error_page 301 302 = @handler;
	    }
	    location @handler {
	        add_header x-redirect $redirect_host always;
			include /etc/nginx/conf/dev_proxy_pass.conf;
			
	        if ($redirect_host = "") {
	        	add_header x-redirect $redirect_host always;
	        	return 400;
	        }
	    }
	    
	    
	    location = /_/livereload {
			proxy_pass http://127.0.0.1:1313;
		    proxy_http_version 1.1;
		    
    		proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection Upgrade;
			proxy_set_header Host $http_host;

        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;
		}
		
		
		location = /socket.io/ {
			proxy_pass http://host.containers.internal:$port_from_arg/socket.io/?$args&EIO=$eio;
			proxy_http_version 1.1;

			proxy_set_header X-Real-IP $remote_addr;
			add_header Access-Control-Allow-Origin $cors always;
			proxy_set_header Upgrade $http_upgrade;
	    	proxy_set_header Connection Upgrade;
		}

		
		location /stream/ {
			proxy_pass http://stream/;
		}
		location /stream/ws/ {
		    proxy_pass http://stream/ws/;
		    
		    proxy_http_version 1.1;
		    proxy_set_header Upgrade $http_upgrade;
		    proxy_set_header Connection Upgrade;
		    proxy_set_header Host $host;
		    
		}
		
		
		location /portainer/ {
			proxy_pass http://portainer:9000/;
		}
		location /portainer/api/websocket/ {
			proxy_pass http://portainer:9000/api/websocket/;
			
			proxy_set_header X-Real-IP $remote_addr;
			add_header Access-Control-Allow-Origin $cors always;
			proxy_set_header Upgrade $http_upgrade;
	    	proxy_set_header Connection Upgrade;
		}
		
		location /pgadmin/ {
		    proxy_pass http://pgadmin;
		    proxy_set_header X-Scheme https;
		    proxy_set_header Host $host;
		}
		
		
		location /extract/ {
			#proxy_pass http://boilerpipe/extract;
			proxy_method POST;
			proxy_http_version 1.1;
			proxy_set_header Content-Type application/json;
			proxy_set_body '{"url": "$arg_url"}'; 
			
			add_header Access-Control-Allow-Origin $cors always;
		}
		#curl -v 'localhost/extract?extractImages=1' -H 'Content-Type: application/json' -d '{"extractImages": true, "url": "https://news.mt.co.kr/mtview.php?no=2021100708043827296"}'	
	    
		location /registrybrowser/ {
		    proxy_pass http://registry-browser:8080/;
		}
		

		location /Angular {
			try_files $uri =404;
		}
		location ~ ^\/angular\/(.*\.(?:css|js|map))$ {
			root /mnt;
			try_files /Angular/dist/demo/$1 =404;
		}
		location /angular {
			root /mnt;
			try_files /Angular/index.html =404;
		}
		
		

		location / {
			proxy_pass http://host.containers.internal:8080/;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Connection "";

			add_header Access-Control-Allow-Origin $cors always;
			add_header Access-Control-Allow-Headers Content-Type always;
		}
		

		include /etc/nginx/conf/common.conf;
	}
	

	map $http_upgrade $connection_upgrade {
    	default upgrade;
    	'' close;
	}
	map $ssl_early_data $tls1_3_early_data {
	  "~." $ssl_early_data;
	  default "";
	}

	
	
}
