map_hash_bucket_size 128;

map $http_origin $cors {
  ~^https://(.*).hwangsehyun.com$ $http_origin;
  https://imshow-express.fly.dev $http_origin;
  ~^https://(.*).kbdlab.xyz$ $http_origin;
  ~^https://(.*).yonsei.ac.kr$ $http_origin;

  ~^http://localhost:(.*) $http_origin;
  ~^https://(.*).stackblitz.io $http_origin;
  https://ap-northeast-2.console.aws.amazon.com $http_origin;
  https://hoppscotch.io $http_origin;

  http://demo.beyondwork.co.kr $http_origin;
  https://nextlab.s3.ap-northeast-2.amazonaws.com  $http_origin;
  default "";
}


map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}
map $ssl_early_data $tls1_3_early_data {
  "~." $ssl_early_data;
  default "";
}


map $remote_addr $proxy_forwarded_elem {
    # IPv4 addresses can be sent as-is
    ~^[0-9.]+$          "for=$remote_addr";

    # IPv6 addresses need to be bracketed and quoted
    ~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";

    # Unix domain socket names cannot be represented in RFC 7239 syntax
    default             "for=unknown";
}

map $http_forwarded $proxy_add_forwarded {
    # If the incoming Forwarded header is syntactically valid, append to it
    "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

    # Otherwise, replace it
    default "$proxy_forwarded_elem";
}


map $upstream_http_location $redirect_uri {
    "~^http://[^/]+/(.*)$" $1;
}
map $upstream_http_location $redirect_host {
    "~^http://([^/]+)" $1;
    default "";
}
map $arg_port $port_from_arg {
  ~^(\d+) $1;
  default 8080;
}
